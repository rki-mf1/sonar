name: Test&Check
on:
  pull_request:
  push:
    branches:
      - dev
jobs:
    Lint:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout 🐱
          uses: actions/checkout@v4
          with:
            repository: rki-mf1/sonar-cli
            # token: ${{ secrets.SONAR_CLI_GH_ACTION }} # `secrets.GH_PAT` is a secret that contains your PAT
        - name: Set up Python 🐱
          uses: actions/setup-python@v5
          with:
            python-version: '3.11'
        - name: Install dependencies 🐱
          run: pip install poetry flake8
        - name: Run flake8 - Code style check 🐱
          run: poetry run flake8 src/ --config=.flake8 -v

    Test:
      runs-on: ubuntu-latest
      defaults:
        run:
          shell: bash -el {0}
      steps:
        - name: Checkout 🐶
          uses: actions/checkout@v4
          with:
            repository: rki-mf1/sonar-cli
            path: sonar-cli
            # token: ${GH_PAT}
        - name: Set up Python 🐶
          uses: conda-incubator/setup-miniconda@v3
          with:
            miniconda-version: "latest"
            channels: conda-forge,bioconda,defaults
            activate-environment: "sonar-cli"
            python-version: 3.11
        - name: Install dependencies 🐶
          working-directory: sonar-cli
          run: |
            conda install poetry snpeff mafft bcftools
            conda info
            poetry lock --no-update
            poetry install
            poetry run pip install git+https://git@github.com/kcleal/pywfa.git@9c5e192
        - name: Hello sonar-cli 🐶
          run: sonar-cli -v
        - name: Checkout 🙈
          uses: actions/checkout@v4
          with:
            repository: rki-mf1/sonar-backend
            ref: main
            token:  ${{ secrets.SONAR_TOKEN }}
            path: sonar-backend
        - name: Start containers 🙈
          working-directory: sonar-backend
          id: docker_compose_build
          run: |
            docker build --no-cache -t backend_dev:local -f Dockerfile .
            docker compose -f "docker-compose.test-gh.yml" up -d --build
        - name: Run Pytest 🐶
          working-directory: sonar-cli
          env:
            API_URL: "http://127.0.0.1:8000/api"
            LOG_LEVEL: "DEBUG"
            CHUNK_SIZE: 100
            ANNO_TOOL_PATH: "snpEff"
            ANNO_CHUNK_SIZE: 50
          run:  poetry run pytest --cov -n 2 --cache-clear --dist loadgroup -rfeP -x tests/
        # - name: Stop containers 🙈
        #   working-directory: sonar-backend
        #   if: always()
        #   run: docker compose -f "docker-compose.test-gh.yml" down
