name: test

on:
  push:

permissions: write-all

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v4
      
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch


      - name: Build the backend container
        run: |
          cp template.env .env
          docker build -t backend_dev:local -f Dockerfile .

      - name: Bring up containers
        run: docker compose -f docker-compose-dev.yml up --detach --quiet-pull

      - name: Install testing dependencies
        run: docker compose -f docker-compose-dev.yml exec -t dev-django pip install --no-cache-dir --disable-pip-version-check -r requirements-testing.txt
          
      - name: Run tests
        run: docker compose -f docker-compose-dev.yml exec -T dev-django coverage run ./manage.py test --no-input

      - name: Generate reports
        run: docker compose -f docker-compose-dev.yml exec -T dev-django coverage html -d 'coverage/${{ steps.extract_branch.outputs.branch }}/'
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'work/sonar/coverage'

      - name: Deploy to GitHub Pages
        id: pages-deployment
        uses: actions/deploy-pages@v4

      - name: Find current PR
        uses: jwalton/gh-find-current-pr@master
        id: findPr
        with:
          state: open

      - name: Comment coverage page link
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
              [Coverage Report]( ${{ steps.pages-deployment.outputs.page_url }}/${{ steps.extract_branch.outputs.branch }}/)
          comment_tag: 'coverage-link'
          pr_number: ${{ steps.findPr.outputs.pr }}
