# Generated by Django 5.1.4 on 2024-12-19 09:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("rest_api", "0063_remove_mutation_parent_id_mutation_parent"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="mutation",
            name="alignments",
        ),
        migrations.RemoveField(
            model_name="mutation",
            name="gene",
        ),
        migrations.RemoveField(
            model_name="mutation",
            name="parent",
        ),
        migrations.RemoveField(
            model_name="mutation",
            name="replicon",
        ),
        migrations.RemoveField(
            model_name="mutation2annotation",
            name="mutation",
        ),
        migrations.RemoveField(
            model_name="mutation2annotation",
            name="alignment",
        ),
        migrations.RemoveField(
            model_name="mutation2annotation",
            name="annotation",
        ),
        migrations.AlterField(
            model_name="alignment",
            name="replicon",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="rest_api.replicon"
            ),
        ),
        migrations.AlterField(
            model_name="alignment",
            name="sequence",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alignments",
                to="rest_api.sequence",
            ),
        ),
        migrations.AlterField(
            model_name="annotationtype",
            name="impact",
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name="annotationtype",
            name="seq_ontology",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="gene",
            name="end",
            field=models.BigIntegerField(),
        ),
        migrations.AlterField(
            model_name="gene",
            name="replicon",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="rest_api.replicon"
            ),
        ),
        migrations.AlterField(
            model_name="gene",
            name="start",
            field=models.BigIntegerField(),
        ),
        migrations.AlterField(
            model_name="gene",
            name="strand",
            field=models.BigIntegerField(),
        ),
        migrations.AlterField(
            model_name="genesegment",
            name="gene",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="rest_api.gene"
            ),
        ),
        migrations.AlterField(
            model_name="replicon",
            name="reference",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="rest_api.reference"
            ),
        ),
        migrations.AlterField(
            model_name="replicon",
            name="sequence",
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name="sample",
            name="datahash",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="sample",
            name="name",
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name="sample",
            name="sequence",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to="rest_api.sequence"
            ),
        ),
        migrations.CreateModel(
            name="NucleotideMutation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref", models.TextField(blank=True, null=True)),
                ("alt", models.TextField(blank=True, null=True)),
                ("start", models.BigIntegerField()),
                ("end", models.BigIntegerField()),
                (
                    "alignments",
                    models.ManyToManyField(
                        related_name="nucleotide_mutations", to="rest_api.alignment"
                    ),
                ),
                (
                    "replicon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rest_api.replicon",
                    ),
                ),
            ],
            options={
                "db_table": "nucleotide_mutation",
            },
        ),
        migrations.CreateModel(
            name="AminoAcidMutation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref", models.TextField(blank=True, null=True)),
                ("alt", models.TextField(blank=True, null=True)),
                ("start", models.BigIntegerField(blank=True, null=True)),
                ("end", models.BigIntegerField(blank=True, null=True)),
                (
                    "alignments",
                    models.ManyToManyField(
                        related_name="amino_acid_mutations", to="rest_api.alignment"
                    ),
                ),
                (
                    "gene",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rest_api.gene",
                    ),
                ),
                (
                    "replicon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rest_api.replicon",
                    ),
                ),
                ("parent", models.ManyToManyField(to="rest_api.nucleotidemutation")),
            ],
            options={
                "db_table": "amino_acid_mutation",
            },
        ),
        migrations.AddField(
            model_name="annotationtype",
            name="mutations",
            field=models.ManyToManyField(
                related_name="annotations", to="rest_api.nucleotidemutation"
            ),
        ),
        migrations.DeleteModel(
            name="Alignment2Mutation",
        ),
        migrations.DeleteModel(
            name="Mutation",
        ),
        migrations.DeleteModel(
            name="Mutation2Annotation",
        ),
        migrations.AddIndex(
            model_name="nucleotidemutation",
            index=models.Index(fields=["start"], name="nucleotide__start_6615b2_idx"),
        ),
        migrations.AddIndex(
            model_name="nucleotidemutation",
            index=models.Index(fields=["end"], name="nucleotide__end_003063_idx"),
        ),
        migrations.AddIndex(
            model_name="nucleotidemutation",
            index=models.Index(fields=["ref"], name="nucleotide__ref_f7c83c_idx"),
        ),
        migrations.AddIndex(
            model_name="nucleotidemutation",
            index=models.Index(fields=["alt"], name="nucleotide__alt_8605ca_idx"),
        ),
        migrations.AddConstraint(
            model_name="nucleotidemutation",
            constraint=models.UniqueConstraint(
                fields=("ref", "alt", "start", "end", "replicon"),
                name="unique_nt_mutation",
            ),
        ),
        migrations.AddConstraint(
            model_name="nucleotidemutation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("alt__isnull", True)),
                fields=("ref", "start", "end", "replicon"),
                name="unique_nt_mutation_null_alt",
            ),
        ),
        migrations.AddConstraint(
            model_name="nucleotidemutation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("ref__isnull", True)),
                fields=("alt", "start", "end", "replicon"),
                name="unique_nt_mutation_null_ref",
            ),
        ),
        migrations.AddIndex(
            model_name="aminoacidmutation",
            index=models.Index(fields=["gene"], name="amino_acid__gene_id_d4203e_idx"),
        ),
        migrations.AddIndex(
            model_name="aminoacidmutation",
            index=models.Index(fields=["start"], name="amino_acid__start_11ae3a_idx"),
        ),
        migrations.AddIndex(
            model_name="aminoacidmutation",
            index=models.Index(fields=["end"], name="amino_acid__end_e8901f_idx"),
        ),
        migrations.AddIndex(
            model_name="aminoacidmutation",
            index=models.Index(fields=["ref"], name="amino_acid__ref_be60a6_idx"),
        ),
        migrations.AddIndex(
            model_name="aminoacidmutation",
            index=models.Index(fields=["alt"], name="amino_acid__alt_1cd2ff_idx"),
        ),
        migrations.AddConstraint(
            model_name="aminoacidmutation",
            constraint=models.UniqueConstraint(
                fields=("ref", "alt", "start", "end", "gene", "replicon"),
                name="unique_aa_mutation",
            ),
        ),
        migrations.AddConstraint(
            model_name="aminoacidmutation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("gene__isnull", True)),
                fields=("ref", "alt", "start", "end", "replicon"),
                name="unique_aa_mutation_null_gene",
            ),
        ),
        migrations.AddConstraint(
            model_name="aminoacidmutation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("alt__isnull", True)),
                fields=("ref", "start", "end", "gene", "replicon"),
                name="unique_aa_mutation_null_alt",
            ),
        ),
        migrations.AddConstraint(
            model_name="aminoacidmutation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("ref__isnull", True)),
                fields=("alt", "start", "end", "gene", "replicon"),
                name="unique_aa_mutation_null_ref",
            ),
        ),
        migrations.AddConstraint(
            model_name="aminoacidmutation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("alt__isnull", True), ("gene__isnull", True)),
                fields=("ref", "start", "end", "replicon"),
                name="unique_aa_mutation_null_alt_null_gene",
            ),
        ),
    ]
