version: '3'

services:
  postgres:
    image: postgres:alpine
    container_name: dev-covsonar-db
    restart: unless-stopped
    volumes:
      - './conf/initdb/:/docker-entrypoint-initdb.d/'
      # This exact path inside the container needs to be mapped to a volume,
      # otherwise it will automatically be mapped to a volume inside of the
      # host's /var/lib/docker/volumes directory
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - conf/dev_db.env
      - conf/dev_django.env
    ports:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  dev-django:
    image: backend_dev:local # hint: must be built before, use "build_docker_dev.ps1"
    env_file:
      - conf/dev_django.env
      - conf/dev_secrets.env
    container_name: dev-covsonar-django
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:9080
    # enable this and "django_extensions" in settings.dev to enable per request profiling
    # also create the ./profiler directory in project root
    #command: python manage.py runprofileserver --use-cprofile --prof-path=/code/profiler 0.0.0.0:9080
    volumes:
      - .:/code
      - ./covsonar2_server/test/media:/covsonarmedia
      - ./covsonar2_server/test/static:/staticfiles
      - ./logs/:/covsonarlogs
      - ./input-logs/:/input-logs
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    ports:
      # to access directly, normally can use localhost:8000 via the nginx proxy
      - "9080"

  dev-django-apscheduler:
    image: backend_dev:local # hint: must be built before, use "build_docker_dev.ps1"
    env_file:
      - conf/dev_django.env
      - conf/dev_secrets.env
    container_name: dev-covsonar-django-apscheduler
    restart: on-failure
    command: python manage.py runapscheduler
    volumes:
      - .:/code
    depends_on:
      postgres:
        condition: service_healthy

  backend-nginx:
    build:
      context: ./nginx
    volumes:
      - ./covsonar2_server/test/static:/staticfiles
      - ./covsonar2_server/test/media:/mediafiles
    ports:
      - "8000:8000"
    depends_on:
      - "dev-django"

  redis:
    image: redis:7
    container_name: dev-covsonar-cache
    restart: unless-stopped
    ports:
      - "6379"

